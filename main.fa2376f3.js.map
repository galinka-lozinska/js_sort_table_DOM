{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","employees","querySelectorAll","span","createElement","thOfThead","sortHadler","event","item","target","arrayTr","innerText","sort","a","b","cells","localeCompare","i","length","append","parseFloat","parseNumber","element","prepend","cloneNode","wantedSpan","childNodes","addEventListener","slice","split","join","Number","parseInt"],"mappings":";AAAA,aAkEC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAdD,IAhDA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAC/BE,EAAYD,EAAME,iBAAiB,MACnCC,EAAOL,SAASM,cAAc,QAC9BC,EAAYR,EAAMK,iBAAiB,MAEnCI,EAAa,SAACC,GACZC,IAAAA,EAAOD,EAAME,OACbC,EAAcT,EAAAA,GAEZO,OAAAA,EAAKG,WACN,IAAA,OACHD,EAAQE,KAAK,SAACC,EAAGC,GACfD,OAAAA,EAAEE,MAAM,GAAGJ,UAAUK,cAAcF,EAAEC,MAAM,GAAGJ,aAE3C,IAAA,IAAIM,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAClCjB,EAAMmB,OAAOT,EAAQO,IAEvB,MACG,IAAA,WACHP,EAAQE,KAAK,SAACC,EAAGC,GACfD,OAAAA,EAAEE,MAAM,GAAGJ,UAAUK,cAAcF,EAAEC,MAAM,GAAGJ,aAE3C,IAAA,IAAIM,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAClCjB,EAAMmB,OAAOT,EAAQO,IAEvB,MACG,IAAA,MACHP,EAAQE,KAAK,SAACC,EAAGC,GACfM,OAAAA,WAAWP,EAAEE,MAAM,GAAGJ,WAAaS,WAAWN,EAAEC,MAAM,GAAGJ,aAEtD,IAAA,IAAIM,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAClCjB,EAAMmB,OAAOT,EAAQO,IAEvB,MACG,IAAA,SACHP,EAAQE,KAAK,SAACC,EAAGC,GACfO,OAAAA,EAAYR,EAAEE,MAAM,GAAGJ,WAAaU,EAAYP,EAAEC,MAAM,GAAGJ,aAExD,IAAA,IAAIM,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAClCjB,EAAMmB,OAAOT,EAAQO,MAQHZ,EAAAA,EAAAA,EAAAA,EAAAA,GAAY,EAAA,EAAA,OAAA,IAAA,CAA3BiB,IAAAA,EAAN,EAAA,GACHA,EAAQC,QAAQpB,EAAKqB,WAAU,IAEzBC,IAAAA,EAAaH,EAAQvB,cAAc,QAEzC0B,EAAWN,OAAOG,EAAQI,WAAW,IAErCD,EAAWE,iBAAiB,QAASrB,GAGvC,SAASe,EAAYC,GACbd,IAAAA,EAAOc,EAAQM,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAEvCC,OAAAA,OAAOC,SAASxB","file":"main.fa2376f3.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst employees = tbody.querySelectorAll('tr');\nconst span = document.createElement('span');\nconst thOfThead = thead.querySelectorAll('th');\n\nconst sortHadler = (event) => {\n  const item = event.target;\n  const arrayTr = [...employees];\n\n  switch (item.innerText) {\n    case 'Name' :\n      arrayTr.sort((a, b) =>\n        a.cells[0].innerText.localeCompare(b.cells[0].innerText));\n\n      for (let i = 0; i < arrayTr.length; i++) {\n        tbody.append(arrayTr[i]);\n      }\n      break;\n    case 'Position' :\n      arrayTr.sort((a, b) =>\n        a.cells[1].innerText.localeCompare(b.cells[1].innerText));\n\n      for (let i = 0; i < arrayTr.length; i++) {\n        tbody.append(arrayTr[i]);\n      }\n      break;\n    case 'Age' :\n      arrayTr.sort((a, b) =>\n        parseFloat(a.cells[2].innerText) - parseFloat(b.cells[2].innerText));\n\n      for (let i = 0; i < arrayTr.length; i++) {\n        tbody.append(arrayTr[i]);\n      }\n      break;\n    case 'Salary' :\n      arrayTr.sort((a, b) =>\n        parseNumber(a.cells[3].innerText) - parseNumber(b.cells[3].innerText));\n\n      for (let i = 0; i < arrayTr.length; i++) {\n        tbody.append(arrayTr[i]);\n      }\n      break;\n    default:\n      break;\n  }\n};\n\nfor (const element of [...thOfThead]) {\n  element.prepend(span.cloneNode(true));\n\n  const wantedSpan = element.querySelector('span');\n\n  wantedSpan.append(element.childNodes[1]);\n\n  wantedSpan.addEventListener('click', sortHadler);\n}\n\nfunction parseNumber(element) {\n  const item = element.slice(1).split(',').join('');\n\n  return Number.parseInt(item);\n}\n"]}